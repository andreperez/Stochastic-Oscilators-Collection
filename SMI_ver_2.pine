// @version=4
// @author=André Eduardo Pérez Álvarez (andre_007)
// Thanks to original author: Alex Orekhov (everget)
// Stochastic Momentum Index script may be freely distributed under the MIT license.
study("Stochastic Momentum Index", shorttitle="SMI", resolution="")

//------------------------------------------------------------------------------
// Constants
//------------------------------------------------------------------------------
// Levels
float LEVEL_STRONG_1 = 5
float LEVEL_STRONG_2 = 10
float LEVEL_STRONG_3 = 15
float LEVEL_STRONG_4 = 20
float LEVEL_STRONG_5 = 25

float LEVEL_WEAK_1 = -5
float LEVEL_WEAK_2 = -10
float LEVEL_WEAK_3 = -15
float LEVEL_WEAK_4 = -20
float LEVEL_WEAK_5 = -25

// Colors
color C_LEVEL_STRONG_5 = #151dfb
color C_LEVEL_STRONG_4 = #0052bf
color C_LEVEL_STRONG_3 = #0076d5
color C_LEVEL_STRONG_2 = #119ae6
color C_LEVEL_STRONG_1 = #5dbdf4

color C_LEVEL_WEAK_5 = #a60d0c
color C_LEVEL_WEAK_4 = #e91210
color C_LEVEL_WEAK_3 = #f13937
color C_LEVEL_WEAK_2 = #f46564
color C_LEVEL_WEAK_1 = #f79190

//------------------------------------------------------------------------------
// Functions
//------------------------------------------------------------------------------
f_color_histogram_bull(value) =>
    color _color = na    

    if value >= LEVEL_STRONG_5
        _color := C_LEVEL_STRONG_5
    else if value >= LEVEL_STRONG_4
        _color := C_LEVEL_STRONG_4
    else if value >= LEVEL_STRONG_3
        _color := C_LEVEL_STRONG_3 
    else if value >= LEVEL_STRONG_2
        _color := C_LEVEL_STRONG_2
    else        
        if value > value[1]
            _color := C_LEVEL_STRONG_2
        else
            _color := C_LEVEL_STRONG_1

f_color_histogram_bear(value) =>    
    color _color = na
    
    if value <= LEVEL_WEAK_5
        _color := C_LEVEL_WEAK_5
    else if value <= LEVEL_WEAK_4
        _color := C_LEVEL_WEAK_4
    else if value <= LEVEL_WEAK_3
        _color := C_LEVEL_WEAK_3
    else if value <= LEVEL_WEAK_2
        _color := C_LEVEL_WEAK_2
    else
        _color := C_LEVEL_WEAK_1

//------------------------------------------------------------------------------
// Inputs
//------------------------------------------------------------------------------
length = input(title="Stochastic Lookback", type=input.integer, defval=20, minval=1)
smoth_len_1 = input(title="1st Smoothing Length", type=input.integer, defval=5, minval=1)
smoth_len_2 = input(title="2nd Smoothing Length", type=input.integer, defval=5, minval=1)
signal_Length = input(title="Signal Length", type=input.integer, defval=5, minval=1)

obLevel = input(title="Overbought Level", type=input.integer, defval=40)
osLevel = input(title="Oversold Level", type=input.integer, defval=-40)
maxLevel = input(title="Max Level", type=input.integer, defval=100)
minLevel = input(title="Min Level", type=input.integer, defval=-100)
src = input(title="Source", type=input.source, defval=close)

showHistogram = input(title="Show Histogram ?", type=input.bool, defval=true)
highlightBreakouts = input(title="Highlight Overbought/Oversold Breakouts ?", type=input.bool, defval=true)
highlightCrossovers = input(title="Highlight SMI/Signal Crossovers ?", type=input.bool, defval=false)
highlightZeroCrossovers = input(title="Highlight Zero Line Crossovers ?", type=input.bool, defval=false)
applyFilling = input(title="Apply Ribbon Filling ?", type=input.bool, defval=true)

//------------------------------------------------------------------------------
// Calcs
//------------------------------------------------------------------------------
_highest = highest(length)
_lowest = lowest(length)

numerator = ema(ema(src - 0.5 * (_highest + _lowest), smoth_len_1), smoth_len_2)
denominator = 0.5 * ema(ema(_highest - _lowest, smoth_len_1), smoth_len_2)

smi = 100 * numerator / denominator
signal = ema(smi, signal_Length)
histogram = smi - signal

histColor = histogram >= 0 ? f_color_histogram_bull(histogram) : f_color_histogram_bear(histogram)
// histColor = histogram >= 0 ? f_color_histogram_bull(histogram) : na
plot(showHistogram ? histogram : na, title="Histogram", style=plot.style_columns, color=histColor)

trendColor = smi > signal ? color.blue : color.red
smiColor = applyFilling ? trendColor : #ff3e7d
signalColor = applyFilling ? trendColor : #3c78d8

smiPlot = plot(smi, title="SMI", color=smiColor)
signalPlot = plot(signal, title="Signal", color=signalColor)

transparent = color.new(color.white, 100)

maxLevelPlot = hline(maxLevel, title="Max Level", linestyle=hline.style_dashed, color=transparent)
obLevelPlot = hline(obLevel, title="Overbought Level", linestyle=hline.style_dashed, color=color.green)
fill(maxLevelPlot, obLevelPlot, color=color.new(color.green, 85))

hline(0, title="Zero Level", linestyle=hline.style_dashed, color=color.gray)

osLevelPlot = hline(osLevel, title="Oversold Level", linestyle=hline.style_dashed, color=color.red)
minLevelPlot = hline(minLevel, title="Min Level", linestyle=hline.style_dashed, color=transparent)
fill(osLevelPlot, minLevelPlot, color=color.new(color.red, 85))

// obFillColor = smi > obLevel and highlightBreakouts ? color.green : transparent
// osFillColor = smi < osLevel and highlightBreakouts ? color.red : transparent

// fill(maxLevelPlot, obLevelPlot, color=color.new(obFillColor, 85))
// fill(minLevelPlot, osLevelPlot, color=color.new(osFillColor, 85))

fillColor = applyFilling ? color.new(trendColor, 70) : transparent
fill(smiPlot, signalPlot, color=fillColor)

zeroCrossBgColor = highlightZeroCrossovers ? (smi > 0 ? color.green : color.red) : transparent
bgcolor(color.new(zeroCrossBgColor, 90))

plotshape(highlightCrossovers and crossover(smi, signal) ? smi : na, title="Crossover", location=location.absolute, style=shape.circle, size=size.tiny, color=color.new(color.green, 0))
plotshape(highlightCrossovers and crossunder(smi, signal) ? smi : na, title="Crossunder", location=location.absolute, style=shape.circle, size=size.tiny, color=color.new(color.red, 0))
